#!/bin/bash

set -e

CPUS=${CPUS:-$(grep processor /proc/cpuinfo |wc -l)}
#CPUS=${CPUS:-$(getconf _NPROCESSORS_ONLN)}
dbg=false

# sync*.sh get_config, build*.sh doesn't!
# build*.sh only export_config
function get_config(){
	if [ -d abc ]; then
		echo "android-build-configs (abc) exists"
		echo "git pull origin master for android-build-configs (abc)"
		pushd abc
		git pull origin master
		popd
	else
		echo "Get android-build-configs (abc)"
		git clone https://android-git.linaro.org/git/android-build-configs.git abc
	fi

	if [[ "${base_manifest}" = "pinned-manifest"* ]]; then
		echo "need to get the exact same build config file in the pinned manifest"
		abc_line=$(grep android-build-configs archive/${base_manifest}|tr -d '"')
		abc_commit=''
		for field in ${abc_line}; do
			if echo ${field}|grep 'revision=' ; then
				abc_commit=$(echo ${field}|sed 's/revision=//')
			fi
		done
		if [ -z "${abc_commit}" ]; then
			echo "Failed to find the commit information for android-build-configs repository in archive/${base_manifest}"
			echo "Please check first, and try it again"
			exit 1
		else
			echo "Checking out commit ${abc_commit} from android-build-configs (abc)"
			pushd abc
			git checkout ${abc_commit}
			popd
		fi
	else
		echo "Using master branch of android-build-configs (abc)"
	fi
}

function export_config(){
    echo "Remove hikey-optee-${version}-pullreqs from abc/${board}-optee-${version} before exporting configs"
    sed -e "s/${board}-optee-${version}-pullreqs //g" abc/${board}-optee-${version} > abc/foo
    mv abc/foo abc/${board}-optee-${version}

    echo "Exporting configs from abc/${board}-optee-${version}"

    while read line; do
        if ! echo ${line} |grep -q '^#'; then
	    echo "export ${line}"
            eval "export ${line}"
        fi
    done < abc/${board}-optee-${version}
}

function get_manifest_groups(){
    pushd .repo/manifests
    groups=$(git config --get manifest.groups)
    if [ -z "${groups}" ]; then
        groups_opt=""
    else
        groups_opt="-g ${groups}"
    fi
    popd
    echo "${groups_opt}"
}
